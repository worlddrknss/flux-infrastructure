# -----------------------------
# Reusable AWS OIDC Login Block
# -----------------------------
.aws-login: &aws-login
  - apk add --no-cache aws-cli curl bash
  - >
    aws_sts_output=$(aws sts assume-role-with-web-identity \
      --role-arn "$AWS_ROLE_ARN" \
      --role-session-name "GitLabRunner-${CI_PROJECT_ID}-${CI_PIPELINE_ID}" \
      --web-identity-token "$GITLAB_OIDC_TOKEN" \
      --duration-seconds 3600 \
      --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
      --output text)
  - export $(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s" $aws_sts_output)
  - aws sts get-caller-identity

# -----------------------------
# Reusable Terraform Job Template
# -----------------------------
.terraform-job:
  id_tokens:
    GITLAB_OIDC_TOKEN:
      aud: https://gitlab.com
  image:
    name: hashicorp/terraform:1.13.0
    entrypoint: ["/usr/bin/env", "sh", "-c"]
  before_script:
    - *aws-login
    - cd "$TF_ROOT"
    - |
      terraform init \
        -backend-config="bucket=$TF_STATE_BUCKET" \
        -backend-config="key=$TF_STATE_KEY" \
        -backend-config="region=$TF_STATE_REGION"

# -----------------------------
# Reusable Flux Job Template
# -----------------------------
.flux-job:
  id_tokens:
    GITLAB_OIDC_TOKEN:
      aud: https://gitlab.com
  image: alpine:3.20
  before_script:
    - *aws-login
    # Install Flux CLI
    - curl -s https://fluxcd.io/install.sh | bash
    # Install Terraform 1.13.x
    - apk add --no-cache unzip curl bash git
    - curl -fsSL https://releases.hashicorp.com/terraform/1.13.0/terraform_1.13.0_linux_amd64.zip -o terraform.zip
    - unzip terraform.zip && mv terraform /usr/local/bin/ && rm terraform.zip
    - terraform version
