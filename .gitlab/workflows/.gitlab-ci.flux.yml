stages: [maintenance]

flux-bootstrap:
  image:
    name: ghcr.io/fluxcd/flux-cli:v2.3.0
    entrypoint: ["/usr/bin/env", "sh", "-c"]
  stage: maintenance
  id_tokens:
    GITLAB_OIDC_TOKEN:
      aud: https://gitlab.com
  before_script:
    # Install AWS CLI
    - apk add --no-cache aws-cli
    # Assume AWS IAM role using GitLab OIDC
    - >
      aws_sts_output=$(aws sts assume-role-with-web-identity \
        --role-arn "$AWS_ROLE_ARN" \
        --role-session-name "GitLabRunner-${CI_PROJECT_ID}-${CI_PIPELINE_ID}" \
        --web-identity-token "$GITLAB_OIDC_TOKEN" \
        --duration-seconds 3600 \
        --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]' \
        --output text)
    - export $(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s" $aws_sts_output)
    - aws sts get-caller-identity
    # Pull cluster name from terraform output
    - export EKS_CLUSTER_NAME=$(cat scripts/terraform/cluster_name)
    # Update kubeconfig
    - aws eks update-kubeconfig --name "$EKS_CLUSTER_NAME" --region "$TF_STATE_REGION"
  script:
    - flux check --pre
    - >
      flux bootstrap gitlab \
        --owner="$CI_PROJECT_NAMESPACE" \
        --repository="$CI_PROJECT_NAME" \
        --branch=main \
        --path=flux/clusters/${EKS_CLUSTER_NAME} \
        --token-auth
