---
# This policy denies all ingress traffic to pods in the 'production' namespace
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: deny-ingress-hashicorp
  namespace: hashicorp
spec:
  endpointSelector: {}
  ingress: []     # deny all ingress
  egress:
  - toEntities:
    - all         # allow all egress (pods, DNS, Internet, external IPs)
---
# This policy denies all ingress traffic to pods in the 'production' namespace
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: deny-ingress-external-secrets
  namespace: external-secrets
spec:
  endpointSelector: {}
  ingress: []     # deny all ingress
  egress:
  - toEntities:
    - all         # allow all egress (pods, DNS, Internet, external IPs)
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: allow-external-secrets-to-vault
  namespace: hashicorp
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: vault
  ingress:
  - fromEndpoints:
    - matchLabels:
        io.kubernetes.pod.namespace: external-secrets
    toPorts:
    - ports:
      - port: "8200"
        protocol: TCP
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: allow-vault-to-external-secrets
  namespace: external-secrets
spec:
  endpointSelector: {}
  ingress:
  - fromEndpoints:
    - matchLabels:
        app.kubernetes.io/name: vault
        io.kubernetes.pod.namespace: hashicorp
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: allow-vault-injector-to-production
  namespace: hashicorp
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: vault-agent-injector
  egress:
  - toEntities:
    - kube-apiserver   # required for admission webhook
  - toEndpoints:
    - matchLabels:
        io.kubernetes.pod.namespace: production   # allow injector â†’ production pods
