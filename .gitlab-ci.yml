stages:
  - test
  - secret-detection
  - validate
  - plan
  - apply
  - destroy

variables:
  TF_ROOT: "scripts/terraform"

sast:
  stage: test

secret_detection:
  stage: secret-detection

.terraform-job:
  before_script:
    - export AWS_ROLE_ARN=$AWS_ROLE_ARN
    - export AWS_WEB_IDENTITY_TOKEN_FILE=$CI_JOB_JWT_FILE
    - aws sts get-caller-identity
    - cd "$TF_ROOT"
    - terraform init \
        -backend-config="bucket=$TF_STATE_BUCKET" \
        -backend-config="key=$TF_STATE_KEY" \
        -backend-config="region=$TF_STATE_REGION" \
        -backend-config="dynamodb_table=$TF_STATE_LOCK_TABLE" \
        -backend-config="encrypt=true"

validate:
  extends: .terraform-job
  stage: validate
  script:
    - terraform fmt -check
    - terraform validate
  rules:
    - changes:
        - scripts/terraform/**/*
    - when: never

plan:
  extends: .terraform-job
  stage: plan
  script:
    - terraform plan -out=tfplan
  artifacts:
    paths:
      - scripts/terraform/tfplan
    expire_in: 1h

apply:
  extends: .terraform-job
  stage: apply
  script:
    - terraform apply -auto-approve tfplan
  dependencies:
    - plan
  when: manual

destroy:
  extends: .terraform-job
  stage: destroy
  script:
    - terraform destroy -auto-approve
  when: manual

include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/SAST-IaC.latest.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml